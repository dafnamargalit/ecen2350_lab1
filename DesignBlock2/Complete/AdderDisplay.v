
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module AdderDisplay(
    input [3:0] input_x,
    input [3:0] input_y,
    input [9:0] SW,
	//////////// SEG7 //////////
	output		     [7:0]		HEX0,
	output		     [7:0]		HEX1,
	output		     [7:0]		HEX2,
	output		     [7:0]		HEX3,
	output		     [7:0]		HEX4,
	output		     [7:0]		HEX5,

	//////////// KEY //////////
	input 		     [1:0]		KEY
);

wire [3:0] sign1;
wire [3:0] value1;
wire [3:0] sign2;
wire [3:0] value2;
wire [3:0] of;
wire [3:0] f;
wire [3:0] sum;
wire [3:0] sign_out;
wire [3:0] sum_out;

//if overflow, of
// if positive, positive
//if negative, negative sign, two's complement

FourBitAdder adder(.inputx (input_x), .inputy (input_y), 
 .SW (SW), .KEY (KEY), .overflow (overflow), .sum (sum));

//Display Input 1
assign sign1 = (input_x[0] == 1) ? 4'b1000 : 4'b0000;
assign value1 = (input_x[0] == 1) ? value1 : -value1;

HexSign checkSign1(.sign (sign1), .HEX (HEX5));
HexNumbers setValue1(.NUM (value1), .HEX (HEX4));

//Display Input 2
assign sign2 = (input_y[0] == 1) ? 4'b1000 : 4'b0000;
assign value2 = (input_y[0] == 1) ? value2 : -value2;

HexSign checkSign2(.sign (sign2), .HEX (HEX3));
HexNumbers setValue2(.NUM (value2), .HEX (HEX2));

//Display Overflow

assign sign_out = overflow ? (4'b0001) : sum[0] ? 4'b1000 : 4'b0000;
assign sum_out = overflow ? (4'b1111) : sum[0] ? -sum : sum;

HexSign signage(.sign (sign_out), .HEX (HEX1));
HexNumbers value(.NUM (sum_out), .HEX (HEX0));

endmodule
